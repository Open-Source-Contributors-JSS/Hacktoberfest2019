[
  {
    "title": "git init",
    "description": "The git init command creates a new Git repository. It can be used to convert an existing, unversioned project to a Git repository or initialize a new, empty repository."
  },
  {
    "description": "The git add command adds a change in the working directory to the staging area. It tells Git that you want to include updates to a particular file in the next commit."
  },
  {
    "description": "The git commit command captures a snapshot of the project's currently staged changes."
  },
  {
    "title": "git log",
  },
  {
    "title": "git show",
    "description": "The git commit command shows one or more objects (blobs, trees, tags and commits)."
    "title": "git remote",
    "description": "A remote in Git is a common repository that all team members use to exchange their changes. In most cases, it is stored on a code hosting service like GitHub or on an internal server."
    "title": "git merge",
    "description": "The git merge command lets you take the independent lines of code created by any git branch and integrate them into a single branch."
  },
  { 
    "title": "git config",
    "description": "This command is used to set the author name and email address respectively which is to be used with your commits."
  },
  { 
    "title": "git pull",
    "description": "This command lets you fetch changes from a remote repository and merge it into the current branch."
  },
  {
    "title": "git status",
    "description": "The git commit command provides a status of changes made throughout time."
  },
  {
    "title": "git reset",
    "description": "The git reset command is a complex and versatile tool for undoing changes. It has three primary forms of invocation. These forms correspond to command line arguments --soft, --mixed, --hard. The three arguments each correspond to Git's three internal state management mechanism's, The Commit Tree (HEAD), The Staging Index, and The Working Directory."
  },
  {
  "title": "git status",
  "description": "The git status command shows the state of your working directory and helps you see all the files which are untracked by Git, staged or unstaged." 
  }
{

    "title": "git diff",
    "description": "This command shows how one branch (or even a specific revision) differs from another one."
  },
  { 
    "title": "git --version",
    "description": "Prints the Git suite version that the git program came from."
  },
  {
    "title": "git pull --rebase",
    "description": "This git command is used to apply any commits of current branch ahead of specified one."
  }
]

